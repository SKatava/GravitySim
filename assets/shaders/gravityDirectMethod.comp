#version 430

#define G 6.67430e-11  

struct EntityData {
    double posX;
    double posY;
    double velX;
    double velY;
    double forceX;
    double forceY;
    double mass;
    double padding; 
};

layout(std430, binding = 0) buffer Bodies {
    EntityData entities[];
};

layout (local_size_x = 64) in;  

uniform double deltaTime;

void main() {
    uint i = gl_GlobalInvocationID.x;
    if (i >= entities.length()) return;  

    uint j;
    double forceX = 0;
    double forceY = 0;
    double posX = entities[i].posX;
    double posY = entities[i].posY;
    double mass = entities[i].mass;
    for (j = 0; j < entities.length(); j++) {
        if(i==j) continue;
        double dx = entities[j].posX - posX;
        double dy = entities[j].posY - posY;
        double distSqr = dx * dx + dy * dy;
        double Dist = sqrt(distSqr);

        if(distSqr == 0) continue;

        double f = G * mass * entities[j].mass / (distSqr);
       
        forceX += f * dx/Dist;
        forceY += f * dy/Dist;
    }
    
    entities[i].velX += deltaTime *  (forceX/entities[i].mass);
    entities[i].velY += deltaTime *  (forceY/entities[i].mass);

    entities[i].posX += deltaTime *  entities[i].velX;
    entities[i].posY += deltaTime *  entities[i].velY;
}


